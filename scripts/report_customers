
/*
===============================================================================
Customer Report
===============================================================================
Purpose:
    - This report consolidates key customer metrics and behaviors

Highlights:
    1. Gathers essential fields such as names, ages, and transaction details.
	  2. Segments customers into categories (VIP, Regular, New) and age groups.
    3. Aggregates customer-level metrics:
	   - total orders
	   - total sales
	   - total quantity purchased
	   - total products
	   - lifespan (in months)
    4. Calculates valuable KPIs:
	    - recency (months since last order)
		- average order value
		- average monthly spend
===============================================================================
*/

-- =============================================================================
-- Create Report: gold.report_customers
-- =============================================================================

CREATE VIEW gold.report_customers AS

WITH base_query AS(
SELECT 
	f.order_number,
	f.product_key,
	f.order_date,
	f.sales,
	f.quantity,
	c.customer_key,
	c.customer_number,
	CONCAT(c.first_name, ' ' , c.last_name) AS customer_name,
	DATEDIFF(YEAR, c.birth_date, GETDATE()) AS age
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c ON 
f.customer_key = c.customer_key
WHERE f.order_date IS NOT NULL
),
Customer_Aggregation AS(

SELECT 
	customer_key,
	customer_number,
	customer_name,
	age,
	COUNT(DISTINCT order_number) AS total_orders,
	SUM(sales) AS total_sales,
	SUM(quantity) AS total_quantity,
	COUNT(DISTINCT product_key) AS total_products,
	MAX(order_date) AS last_order_date,
	DATEDIFF(month, MIN(order_date), MAX(order_date)) AS lifespan
FROM base_query
GROUP BY 
	customer_key,
	customer_number,
	customer_name,
	age
)

SELECT
	customer_key,
	customer_number,
	customer_name,
	age,
	CASE WHEN age < 20 THEN 'Under 20'
		WHEN age between 20 AND 29 THEN '20-29'
		WHEN age between 30 AND 39 THEN '30-39'
		WHEN age between 40 AND 49 THEN '40-49'
	ELSE '50 and above'
	END AS age_group,
	 CASE 
            WHEN Lifespan >= 12 AND Total_Sales > 5000 THEN 'VIP'
            WHEN Lifespan >= 12 AND Total_Sales <= 5000 THEN 'Regular'
            ELSE 'New'
        END AS customer_segment,
	last_order_date,
	DATEDIFF(MONTH, last_order_date, GETDATE()) AS Recency,
	total_orders,
	total_sales,
	total_quantity,
	total_products,
	lifespan,
--- compute average order value ---
	CASE WHEN total_sales = 0 THEN 0
		ELSE total_sales / total_orders
	END AS avg_order_value,
--- compute average monthly spend ---
	CASE WHEN lifespan = 0 THEN total_sales	
		ELSE total_sales / lifespan
	END AS avg_monthly_spend
FROM Customer_Aggregation;

SELECT * FROM gold.report_customers;
